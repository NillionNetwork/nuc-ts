name: CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: "publish"
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.check-version.outputs.local_version_is_higher }}
      tag: ${{ steps.check-version.outputs.tag }}
      version: ${{ steps.check-version.outputs.local_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.24"
      - name: Set up Python
        run: uv python install
      - name: Check version
        id: check-version
        run: >-
          cd scripts/version_checker && uv run ./version_checker.py ../../

  publish:
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v4
        with:
          node-version: "23"
          registry-url: "https://registry.npmjs.org"
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm build
      - run: pnpm exec biome ci
      - run: tsc
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --tag ${{ needs.check-version.outputs.tag }} --no-git-checks

      - name: Create GH Release
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [[ "${{ needs.check-version.outputs.tag }}" == "next" ]] && PRERELEASE="-p" || PRERELEASE=""
          gh release create 'nuc-ts-v${{ needs.check-version.outputs.version }}' --generate-notes $PRERELEASE --title "nuc-ts-v${{ needs.check-version.outputs.version }}"

      - name: Upload artifact to GH Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload 'nuc-ts-v${{ needs.check-version.outputs.version }}' *.tgz